<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HTTP请求方式</title>
    <url>/2020/05/11/01.HTTP%E8%AF%B7%E6%B1%82%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p><strong>常用的请求方式</strong></p>
<ul>
<li>GET（查询）：  取出服务器资源（一项或多项）</li>
<li>POST（增加）： 新建服务器资源</li>
<li>PUT（修改）：更新服务器资源（客户端提供改变后的完整资源）  修改  PATCH  </li>
<li>PATCH（修改）：更新服务器资源（客户端提供改变的属性）</li>
<li>DELETE（删除）：删除服务器资源</li>
</ul>
<a id="more"></a>

<p><strong>以管理用户为例</strong></p>
<ul>
<li><code>get /users/{userId}</code>  获取userId对应的user信息</li>
<li><code>post /users</code> 创建一个新的user</li>
<li><code>put /users/{userId}</code> 更改userId对应的user信息</li>
<li><code>delete /users/{userId}</code> 删除userId对应的user。</li>
</ul>
<p><strong>不常用的请求方式</strong></p>
<ul>
<li><p>HEAD：</p>
<p>  <span style="color: red; ">HEAD不会呈现数据，而仅仅是HTTP头信息。</span>有的人可能觉得这个方法没什么用，其实不是这样的。想象一个业务情景：欲判断某个资源是否存在，我们通常使用GET，但这里用HEAD则意义更加明确。</p>
</li>
<li><p>Options：</p>
<p>  <span style="color: red; ">获取当前URL所支持的方法。</span>若请求成功，则它会在HTTP头中包含一个名为“Allow”的头，值是所支持的方法，如“GET, POST”。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP状态码</title>
    <url>/2020/05/11/02.HTTP%E7%8A%B6%E6%80%81%E7%A0%81/</url>
    <content><![CDATA[<p><strong>常用状态码</strong></p>
<ul>
<li>200：请求成功</li>
<li>400：请求失败，客户端错误</li>
<li>404：文件没有找到</li>
<li>500：请求失败，服务器错误</li>
</ul>
<a id="more"></a>

<p>1XX：信息状态码</p>
<ul>
<li><code>100 Continue</code> 继续，一般在发送<code>post</code>请求时，已发送了<code>http header</code>之后服务端将返回此信息，表示确认，之后发送具体参数信息</li>
</ul>
<p>2XX：成功状态码</p>
<ul>
<li><code>200 OK</code> 正常返回信息</li>
<li><code>201 Created</code> 请求成功并且服务器创建了新的资源</li>
<li><code>202 Accepted</code> 服务器已接受请求，但尚未处理</li>
</ul>
<p>3XX：重定向</p>
<ul>
<li><code>301 Moved Permanently</code> 请求的网页已永久移动到新位置。</li>
<li><code>302 Found</code> 临时性重定向。</li>
<li><code>303 See Other</code> 临时性重定向，且总是使用 <code>GET</code> 请求新的 <code>URI</code>。</li>
<li><code>304 Not Modified</code> 自从上次请求后，请求的网页未修改过。</li>
</ul>
<p>4XX：客户端错误</p>
<ul>
<li><code>400 Bad Request</code> 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。</li>
<li><code>401 Unauthorized</code> 请求未授权。</li>
<li><code>403 Forbidden</code> 禁止访问。</li>
<li><code>404 Not Found</code> 找不到如何与 <code>URI</code> 相匹配的资源。</li>
</ul>
<p>5XX:：服务器错误</p>
<ul>
<li><code>500 Internal Server Error</code> 最常见的服务器端错误。</li>
<li><code>503 Service Unavailable</code> 服务器端暂时无法处理请求（可能是过载或维护）。</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title>盒子垂直居中的方法</title>
    <url>/2020/06/11/03.%E5%9E%82%E7%9B%B4%E6%B0%B4%E5%B9%B3%E5%B1%85%E4%B8%AD%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<p><strong>实现垂直水平居中的四种方式：</strong></p>
<ol>
<li>已知盒子宽高，定位+外边距</li>
<li>未知盒子宽度，定位+外边距</li>
<li>未知盒子宽高，定位+移动</li>
<li>未知盒子宽高，使用flex布局</li>
</ol>
<a id="more"></a>

<p><strong>结构代码：</strong></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father_box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son_box"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="方法一：已知盒子宽高，定位-外边距"><a href="#方法一：已知盒子宽高，定位-外边距" class="headerlink" title="方法一：已知盒子宽高，定位+外边距"></a>方法一：已知盒子宽高，定位+外边距</h3><blockquote>
<p>父盒子设置为相对定位；</p>
<p>子盒子设置为绝对定位，距离左侧50%、距离顶部50%、左外边距<code>-宽度/2</code>、上外边距<code>-高度/2</code></p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father_box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son_box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: seagreen;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="定位二：未知盒子宽度，定位-外边距"><a href="#定位二：未知盒子宽度，定位-外边距" class="headerlink" title="定位二：未知盒子宽度，定位+外边距"></a>定位二：未知盒子宽度，定位+外边距</h3><blockquote>
<p>父盒子设置为相对定位</p>
<p>子盒子设置为绝对定位，距离左侧0、距离右侧0、距离顶部0、距离底部0，外边距自动</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father_box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.son_box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: seagreen;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法三：未知盒子宽高，定位-移动"><a href="#方法三：未知盒子宽高，定位-移动" class="headerlink" title="方法三：未知盒子宽高，定位+移动"></a>方法三：未知盒子宽高，定位+移动</h3><blockquote>
<p>父盒子设置为相对定位；</p>
<p>子盒子设置为绝对定位，距离左侧50%、距离顶部50%、向左移动子盒子宽度的50%，向上移动子盒子高度的50%</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father_box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.son_box</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: seagreen;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="方法四：未知盒子宽高，使用flex布局"><a href="#方法四：未知盒子宽高，使用flex布局" class="headerlink" title="方法四：未知盒子宽高，使用flex布局"></a>方法四：未知盒子宽高，使用flex布局</h3><blockquote>
<p>父盒子使用flex布局：</p>
<ul>
<li>display: flex;  </li>
<li>justify-content: center;   水平居中（主轴方向居中）</li>
<li>align-items: center;    垂直居中（交叉轴方向居中）</li>
</ul>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.father_box</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">/* 在主轴方向居中 */</span></span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="comment">/* 在交叉轴居中 */</span></span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.son_box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: seagreen;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>CSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Flex的六个容器属性</title>
    <url>/2020/08/06/04.Flex%E7%9A%84%E5%85%AD%E4%B8%AA%E5%AE%B9%E5%99%A8%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<h2 id="Flex的六个容器属性"><a href="#Flex的六个容器属性" class="headerlink" title="Flex的六个容器属性"></a>Flex的六个容器属性</h2><ul>
<li><code>flex-direction 属性</code>：决定主轴的方向（即项目的排列方向）</li>
<li><code>flex-wrap 属性</code>：决定是否换行</li>
<li><code>flex-flow 属性</code>：<code>flex-direction</code>和<code>flex-wrap</code>两个属性的简写</li>
<li><code>justify-content 属性</code>：项目在主轴上的排列方式</li>
<li><code>align-items 属性</code>：项目在侧轴上的排列方式（单行）</li>
<li><code>align-content 属性</code>：项目在侧轴上的排列方式（多行）</li>
</ul>
<a id="more"></a>

<h3 id="1-flex-direction属性：主轴方向"><a href="#1-flex-direction属性：主轴方向" class="headerlink" title="1. flex-direction属性：主轴方向"></a>1. flex-direction属性：主轴方向</h3><blockquote>
<p><code>flex-direction</code>属性决定：主轴的方向（即项目的排列方向）</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="https://wx1.sbimg.cn/2020/08/06/o3Rfa.png" alt="o3Rfa.png" border="0" />

<ul>
<li><code>row</code>（默认值）：主轴为水平方向，起点在左端。</li>
<li><code>row-reverse</code>：主轴为水平方向，起点在右端。</li>
<li><code>column</code>：主轴为垂直方向，起点在上沿。</li>
<li><code>column-reverse</code>：主轴为垂直方向，起点在下沿。</li>
</ul>
<h3 id="2-flex-wrap属性：是否换行"><a href="#2-flex-wrap属性：是否换行" class="headerlink" title="2. flex-wrap属性：是否换行"></a>2. flex-wrap属性：是否换行</h3><blockquote>
<p><code>flex-wrap</code>属性决定：是否换行</p>
<p>默认情况下，项目都排在一条线（又称”轴线”）上。<code>flex-wrap</code>属性定义，如果一条轴线排不下，如何换行</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="https://wx2.sbimg.cn/2020/08/06/o39Ek.png" alt="o39Ek.png" border="0" />

<ul>
<li><code>nowrap</code>（默认）：不换行。</li>
<li><code>wrap</code>：换行，第一行在上方。</li>
<li><code>wrap-reverse</code>：换行，第一行在下方。</li>
</ul>
<h3 id="3-flex-flow属性：简写"><a href="#3-flex-flow属性：简写" class="headerlink" title="3. flex-flow属性：简写"></a>3. flex-flow属性：简写</h3><blockquote>
<p><code>flex-flow</code>属性是<code>flex-direction</code>属性和<code>flex-wrap</code>属性的简写形式，默认值为<code>row nowrap</code>。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-justify-content属性：主轴排列方式"><a href="#4-justify-content属性：主轴排列方式" class="headerlink" title="4. justify-content属性：主轴排列方式"></a>4. justify-content属性：主轴排列方式</h3><blockquote>
<p><code>justify-content</code>属性定义了项目在主轴上的对齐方式。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="https://wx2.sbimg.cn/2020/08/06/o3Ahh.png" alt="image 20200806114947310" border="0">

<p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p>
<ul>
<li><code>flex-start</code>（默认值）：左对齐</li>
<li><code>flex-end</code>：右对齐</li>
<li><code>center</code>： 居中</li>
<li><code>space-between</code>：两端对齐，项目之间的间隔都相等。</li>
<li><code>space-around</code>：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li>
</ul>
<h3 id="5-align-items属性：侧轴排序方式-单行"><a href="#5-align-items属性：侧轴排序方式-单行" class="headerlink" title="5. align-items属性：侧轴排序方式(单行)"></a>5. align-items属性：侧轴排序方式(单行)</h3><blockquote>
<p><code>align-items</code>属性定义项目在交叉轴（侧轴）上如何对齐。（单行）</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="https://wx2.sbimg.cn/2020/08/06/o3BvM.png" alt="image 20200806115818550" border="0">

<p>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</p>
<ul>
<li><code>flex-start</code>：交叉轴的起点对齐。</li>
<li><code>flex-end</code>：交叉轴的终点对齐。</li>
<li><code>center</code>：交叉轴的中点对齐。</li>
<li><code>baseline</code>: 项目的第一行文字的基线对齐。</li>
<li><code>stretch</code>（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li>
</ul>
<h3 id="6-align-content属性：侧轴排序方法-多行"><a href="#6-align-content属性：侧轴排序方法-多行" class="headerlink" title="6. align-content属性：侧轴排序方法(多行)"></a>6. align-content属性：侧轴排序方法(多行)</h3><blockquote>
<p><code>align-content</code>属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p>
</blockquote>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<img src="https://wx2.sbimg.cn/2020/08/06/o3Qpn.png" alt="image 20200806120106345" border="0">

<ul>
<li><code>flex-start</code>：与交叉轴的起点对齐。</li>
<li><code>flex-end</code>：与交叉轴的终点对齐。</li>
<li><code>center</code>：与交叉轴的中点对齐。</li>
<li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li>
<li><code>space-around</code>：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li>
<li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li>
</ul>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>Flex</tag>
      </tags>
  </entry>
</search>
